{
  "extends": [
    "prettier" // Integra Prettier para formatear el c√≥digo autom√°ticamente
  ],

  "env": {
    "browser": true,
    "node": true,
    "es2021": true
  },

  "parser": "@typescript-eslint/parser", // Usa el parser de TypeScript

  "plugins": [
    "react", // Soporte para React
    "@typescript-eslint", // Soporte para TypeScript
    "react-hooks", // Soporte para hooks de React
    "jsx-a11y", // Mejora la accesibilidad en JSX
    "import", // Mejora la organizaci√≥n de imports
    "prettier", // Integra Prettier
    "@next/next"
  ],

  "rules": {
    // // üìå PRIORIDAD ALTA: Errores cr√≠ticos**
    "no-undef": "off", // Evita el uso de variables no definidas
    "no-unreachable": "error", // Evita c√≥digo inalcanzable
    "react/jsx-no-undef": "error", // Evita el uso de componentes no definidos en JSX
    "react/jsx-key": "error", // Obliga a usar key en listas de elementos
    "react/jsx-no-duplicate-props": "error", // Evita props duplicados en JSX
    "react-hooks/rules-of-hooks": "error", // Asegura el uso correcto de hooks
    "@next/next/no-html-link-for-pages": "error", // Evita el uso incorrecto de enlaces en Next.js
    // ‚ùå "eqeqeq": ["error", "always"], // Obliga a usar === en lugar de ==
    // ‚ùå "curly": "error", // Obliga a usar llaves en estructuras de control
    "no-debugger": "error", // Proh√≠be el uso de debugger
    //"no-alert": "error", // Proh√≠be el uso de alert, confirm y prompt
    // ‚ùå "prefer-const": "error", // Obliga a usar const en lugar de let si la variable no cambia
    // ‚ùå "no-var": "error", // Proh√≠be el uso de var
    // ‚ùå "no-duplicate-imports": "error", // Evita importar el mismo m√≥dulo m√°s de una vez
    // ‚ùå "@typescript-eslint/no-unused-vars": "error", // Advierte sobre variables no utilizadas en TypeScript
    // ‚ùå"no-unused-vars": ["error", { "argsIgnorePattern": "^_" }], // Advierte sobre variables no utilizadas
    // "no-console": "error", // Advierte sobre el uso de console . log

    // // üìå PRIORIDAD MEDIA: Advertencias importantes**
    "no-extra-semi": "warn", // Advierte sobre puntos y coma innecesarios
    // "react-hooks/exhaustive-deps": "warn", // Advierte sobre dependencias mal configuradas en useEffect
    // "@typescript-eslint/no-explicit-any": "warn", // Advierte sobre el uso de any en TypeScript
    // "@typescript-eslint/no-non-null-assertion": "warn", // Advierte sobre el uso de ! en TypeScript
    // "@typescript-eslint/no-empty-interface": "warn", // Advierte sobre interfaces vac√≠as
    // "@typescript-eslint/no-empty-function": "warn", // Advierte sobre funciones vac√≠as
    // "@typescript-eslint/ban-ts-comment": "warn", // Advierte sobre el uso de @ts-ignore
    // "jsx-a11y/alt-text": "warn", // Advierte sobre im√°genes sin atributo alt

    // // üìå PRIORIDAD BAJA: Reglas de estilo y formato**
    // "prettier/prettier": "error", // Obliga a usar Prettier para formatear el c√≥digo

    // // üìå REGLAS DE REACT
    "react/react-in-jsx-scope": "off", // Next.js ya importa React autom√°ticamente, no es necesario importarlo en cada archivo.
    "react/jsx-uses-react": "off", // React 17+ no requiere `React` en el scope para usar JSX.
    "react/jsx-uses-vars": "off", // Evita advertencias innecesarias sobre variables JSX no utilizadas.

    // // üìå REGLAS DE TYPESCRIPT
    // "@typescript-eslint/explicit-function-return-type": "warn", // Advierte si una funci√≥n no tiene un tipo de retorno expl√≠cito.
    // "@typescript-eslint/consistent-type-definitions": ["error", "interface"], // Obliga a usar `interface` en lugar de `type` para definir objetos.
    // "@typescript-eslint/explicit-module-boundary-types": "off", // No obliga a definir tipos de retorno en funciones exportadas.

    // // üìå REGLAS DE IMPORTACIONES
    // "import/no-unresolved": "error", // Genera error si se importa un m√≥dulo inexistente o mal escrito.
    // "import/no-duplicates": "error", // Evita importar el mismo m√≥dulo m√°s de una vez en un archivo.

    // "import/order": [
    //   "warn",
    //   {
    //     "groups": ["builtin", "external", "internal", "parent", "sibling", "index"], // Ordena los imports
    //     "newlines-between": "always", // Separa los grupos de imports con una l√≠nea en blanco
    //     "alphabetize": { "order": "asc", "caseInsensitive": true } // Ordena los imports alfab√©ticamente
    //   }
    // ],
    // "jsx-a11y/anchor-is-valid": [
    //   "warn",
    //   {
    //     "aspects": ["invalidHref", "preferButton"] // Advierte sobre el uso incorrecto de <a>
    //   }
    // ],
    "@next/next/no-sync-scripts": "warn" // Advierte sobre el uso de scripts s√≠ncronos en Next.js
  },

  "settings": {
    "react": {
      "version": "detect" // Detecta autom√°ticamente la versi√≥n de React
    },
    "import/resolver": {
      "node": {
        "extensions": [".js", ".jsx", ".ts", ".tsx"] // Especifica las extensiones de archivo para imports
      }
    }
  }
}
