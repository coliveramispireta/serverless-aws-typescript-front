"use client";
import "@/app/globals.scss";
import PageContext from "@/context/pagecontext/pagecontext";
import { DatosUsuarioState } from "@/context/usercontext/usercontext";
import ErrorDialog from "@/smartcomponents/custom/errordialog/errordialog";
import InfoDialog from "@/smartcomponents/custom/infodialog/infodialog";
import SuccessDialog from "@/smartcomponents/custom/successdialog/successdialog";
import WarningDialog from "@/smartcomponents/custom/warningdialog/warningdialog";
import { useContext, useEffect, useState } from "react";
import { sysAuthGuard } from "../authguards";
import WithGuardsLogin from "@/components/withauthguards/withauthguardslogin";
import { UserContextProvider } from "@/context/usercontext/usercontextprovider";
import NoSSRWrapper from "@/components/nossrwrapper/nossrwrapper";
import { Amplify } from "aws-amplify";
import { awsConfig } from "../../../aws.config";

Amplify.configure(awsConfig);

const metadata = {
  title: "gteate Next App",
  description: "Generated by gteate next app",
};

interface UserInfo extends DatosUsuarioState {
  iat: number;
  exp: number;
}

export default function RootLayout({ children }: { children: React.ReactNode }) {
  const pageContext = useContext(PageContext);
  if (pageContext === undefined) {
    throw new Error("PageStateContext must be inside a PageStateContextProvider");
  }

  const { successState, errorState, warningState, infoState, apiCallState } = pageContext!;

  return (
    <>
      <NoSSRWrapper>
        <UserContextProvider>
          <WithGuardsLogin authGuards={sysAuthGuard}>{children}</WithGuardsLogin>
        </UserContextProvider>
      </NoSSRWrapper>

      <SuccessDialog
        message={successState.pageMessage.value}
        open={successState.pageDialog.value}
        onClose={successState.handleCloseDialog}
      />

      <ErrorDialog
        message={errorState.pageMessage.value}
        open={errorState.pageDialog.value}
        onClose={errorState.handleCloseDialog}
      />

      <WarningDialog
        message={warningState.pageMessage.value}
        open={warningState.pageDialog.value}
        onClose={warningState.handleCloseDialog}
      />

      <InfoDialog
        message={infoState.pageMessage.value}
        open={infoState.pageDialog.value}
        onClose={infoState.handleCloseDialog}
      />
    </>
  );
}
