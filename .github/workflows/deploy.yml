name: Deploy Frontend to AWS (dev/prod)

on:
  push:
    branches:
      - development
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      HUSKY: 0
      NEXT_PUBLIC_API_URL_LAMBDA_LOCAL: ${{ secrets.API_URL_LAMBDA_LOCAL }}
      NEXT_PUBLIC_API_URL_LAMBDA_DEV: ${{ secrets.API_URL_LAMBDA_DEV }}
      NEXT_PUBLIC_API_URL_LAMBDA_PROD: ${{ secrets.API_URL_LAMBDA_PROD }}
      NEXT_PUBLIC_AUTH_TOKEN_LOCAL: ${{ secrets.AUTH_TOKEN_LOCAL }}
      NEXT_PUBLIC_AUTH_TOKEN_DEV: ${{ secrets.AUTH_TOKEN_DEV }}
      NEXT_PUBLIC_AUTH_TOKEN_PROD: ${{ secrets.AUTH_TOKEN_PROD }}
      NEXT_PUBLIC_REDIRECT_SIGNIN_DEV: ${{ secrets.REDIRECT_SIGNIN_DEV }}
      NEXT_PUBLIC_REDIRECT_SIGNIN_PROD: ${{ secrets.REDIRECT_SIGNIN_PROD }}
      NEXT_PUBLIC_REDIRECT_SIGNUP_DEV: ${{ secrets.REDIRECT_SIGNUP_DEV }}
      NEXT_PUBLIC_REDIRECT_SIGNUP_PROD: ${{ secrets.REDIRECT_SIGNUP_PROD }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install
        run: npm ci

      - name: Build
        run: |
          if [ "${{ github.ref }}" == "refs/heads/master" ]; then
            npm run build-prod
          else
            npm run build-dev
          fi

      - name: Deploy a S3
        run: |
          if [ "${{ github.ref }}" == "refs/heads/master" ]; then
            aws s3 sync ./out s3://$S3_BUCKET/serverless/serverless-crud-guru-challenge-front/prod --delete --exact-timestamps
          else
            aws s3 sync ./out s3://$S3_BUCKET/serverless/serverless-crud-guru-challenge-front/dev --delete --exact-timestamps
          fi
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          S3_BUCKET: ${{ secrets.S3_BUCKET }}

      - name: Invalidar CloudFront Cache
        run: |
          if [ "${{ github.ref }}" == "refs/heads/master" ]; then
            aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID_PROD --paths "/*"
          else
            aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID_DEV --paths "/*"
          fi
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          DISTRIBUTION_ID_DEV: ${{ secrets.DISTRIBUTION_ID_DEV }}
          DISTRIBUTION_ID_PROD: ${{ secrets.DISTRIBUTION_ID_PROD }}
